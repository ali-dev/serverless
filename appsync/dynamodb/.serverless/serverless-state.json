{
  "service": {
    "service": "dynamodb",
    "serviceObject": {
      "name": "dynamodb"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "profile": "personal",
      "region": "us-east-1",
      "environment": {
        "ORGANIZATION_TABLE": "dev-organization",
        "CAUSE_TABLE": "dev-cause"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "CognitoUserPoolUsers": {
            "Type": "AWS::Cognito::UserPool",
            "DeletionPolicy": "Retain",
            "Properties": {
              "UserPoolName": "DineUserPool",
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": true,
                  "RequireNumbers": true,
                  "RequireSymbols": false,
                  "RequireUppercase": true
                }
              },
              "UsernameAttributes": [
                "email"
              ]
            }
          },
          "WebUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "Web",
              "GenerateSecret": false,
              "RefreshTokenValidity": 30,
              "UserPoolId": {
                "Ref": "CognitoUserPoolUsers"
              }
            }
          },
          "OrganizationTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "TableName": "dev-organization",
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "CauseTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "organizationId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "organizationId",
                  "KeyType": "RANGE"
                }
              ],
              "TableName": "dev-cause",
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "GraphQlApi": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
              "Name": "dynamodbDemo",
              "AuthenticationType": "API_KEY",
              "AdditionalAuthenticationProviders": []
            }
          },
          "GraphQlApiKeyDefault": {
            "Type": "AWS::AppSync::ApiKey",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Description": "serverless-appsync-plugin: AppSync API Key for GraphQlApiKeyDefault",
              "Expires": 1602808664
            }
          },
          "GraphQlSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
              "Definition": "type Cause {\n\tid: String!\n\tcauseName: String!\n\torganizationId: String!\n\torganizationName: String!\n\tdetails: String!\n\timage: String\n\tcountry: String!\n}\n\ntype Causes {\n\tcauses: [Cause!]\n}\n\ntype Organization {\n\tid: String!\n\tname: String!\n}\n\ntype Query {\n\tgetOrganizationInfo(name: String!): Organization!\n\tgetCauseInfo(id: String!, organizationId: String!): Cause\n\tgetAllCauses: Causes!\n}\n\nschema {\n\tquery: Query\n}",
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              }
            }
          },
          "GraphQlDsOrganizationsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsOrganizationsPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query",
                          "dynamodb:UpdateItem",
                          "dynamodb:GetItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-east-1:*:table/dev-organization",
                          "arn:aws:dynamodb:us-east-1:*:table/dev-organization/*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlDsCausesRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsCausesPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query",
                          "dynamodb:UpdateItem",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:PutItem",
                          "dynamodb:DeleteItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-east-1:*:table/dev-cause",
                          "arn:aws:dynamodb:us-east-1:*:table/dev-cause/*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "GraphQlDsOrganizations": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "Organizations",
              "Description": "Organiations table",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "GraphQlDsOrganizationsRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "us-east-1",
                "TableName": "dev-organization",
                "UseCallerCredentials": false
              }
            }
          },
          "GraphQlDsCauses": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "Causes",
              "Description": "Causes table",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "GraphQlDsCausesRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "us-east-1",
                "TableName": "dev-cause",
                "UseCallerCredentials": false
              }
            }
          },
          "GraphQlResolverQuerygetOrganizationInfo": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getOrganizationInfo",
              "RequestMappingTemplate": "{\n    \"version\": \"2017-02-28\",\n    \"operation\": \"GetItem\",\n    \"key\": {\n        \"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id),\n    }\n}",
              "ResponseMappingTemplate": "$util.toJson($ctx.result)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsOrganizations",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverQuerygetCauseInfo": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getCauseInfo",
              "RequestMappingTemplate": "{\n    \"version\": \"2017-02-28\",\n    \"operation\": \"GetItem\",\n    \"key\": {\n        \"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id),\n        \"organizationId\": $util.dynamodb.toDynamoDBJson($ctx.args.organizationId)\n        \n    }\n}",
              "ResponseMappingTemplate": "$util.toJson($ctx.result)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsCauses",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverQuerygetAllCauses": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getAllCauses",
              "RequestMappingTemplate": "{\n    \"version\" : \"2017-02-28\",\n    \"operation\" : \"Scan\",\n    ## Add 'limit' and 'nextToken' arguments to this field in your schema to implement pagination. **\n    ## \"limit\": $util.defaultIfNull(${ctx.args.limit}, 20),\n    ## \"nextToken\": $util.toJson($util.defaultIfNullOrBlank($ctx.args.nextToken, null))\n}",
              "ResponseMappingTemplate": "{\n\"causes\": $utils.toJson($context.result.items)\n}",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsCauses",
                  "Name"
                ]
              }
            }
          },
          "GraphQlResolverCauseorganizationName": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "GraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "GraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Cause",
              "FieldName": "organizationName",
              "RequestMappingTemplate": "{\n    \"version\": \"2017-02-28\",\n    \"operation\": \"GetItem\",\n    \"key\": {\n        \"id\": $util.dynamodb.toDynamoDBJson($ctx.source.organizationId),\n    }\n}",
              "ResponseMappingTemplate": "## Pass back the result from DynamoDB. **\n$util.toJson($ctx.result.name)",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "GraphQlDsOrganizations",
                  "Name"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GraphQlApiUrl": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApi",
                "GraphQLUrl"
              ]
            }
          },
          "GraphQlApiKeyDefault": {
            "Value": {
              "Fn::GetAtt": [
                "GraphQlApiKeyDefault",
                "ApiKey"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "stage": "dev",
      "tableThroughputs": {
        "prod": 5,
        "default": 1
      },
      "tableThroughput": 1,
      "appsync-offline": {
        "port": 62222,
        "dynamodb": {
          "client": {
            "endpoint": "http://localhost:8000",
            "region": "localhost"
          }
        }
      },
      "dynamodb": {
        "start": {
          "port": 8000,
          "inMemory": true,
          "migrate": true,
          "seed": true
        }
      },
      "fixtures": [
        {
          "table": "dev-organization",
          "enable": true,
          "sources": [
            "./dev-organizations.yml"
          ]
        },
        {
          "table": "dev-cause",
          "enable": true,
          "autogeneratedId": "id",
          "sources": [
            "./dev-causes.yml"
          ]
        }
      ],
      "appSync": {
        "name": "dynamodbDemo",
        "authenticationType": "API_KEY",
        "mappingTemplates": [
          {
            "dataSource": "Organizations",
            "type": "Query",
            "field": "getOrganizationInfo",
            "request": "getOrganizationInfo-request-mapping-template.txt",
            "response": "getOrganizationInfo-response-mapping-template.txt"
          },
          {
            "dataSource": "Causes",
            "type": "Query",
            "field": "getCauseInfo",
            "request": "getCauseInfo-request-mapping-template.txt",
            "response": "getCauseInfo-response-mapping-template.txt"
          },
          {
            "dataSource": "Causes",
            "type": "Query",
            "field": "getAllCauses",
            "request": "getCauses-request-mapping-template.txt",
            "response": "getCauses-response-mapping-template.txt"
          },
          {
            "dataSource": "Organizations",
            "type": "Cause",
            "field": "organizationName",
            "request": "organizationName-request-mapping-template.txt",
            "response": "organizationName-response-mapping-template.txt"
          }
        ],
        "schema": null,
        "dataSources": [
          {
            "type": "AMAZON_DYNAMODB",
            "name": "Organizations",
            "description": "Organiations table",
            "config": {
              "tableName": "dev-organization",
              "iamRoleStatements": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsOrganizationsRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"]"
              }
            }
          },
          {
            "type": "AMAZON_DYNAMODB",
            "name": "Causes",
            "description": "Causes table",
            "config": {
              "tableName": "dev-cause",
              "iamRoleStatements": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphQlDsCausesRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"]"
              }
            }
          }
        ]
      }
    },
    "plugins": [
      "serverless-appsync-plugin",
      "serverless-dynamodb-local",
      "serverless-appsync-offline",
      "serverless-offline",
      "serverless-dynamodb-fixtures"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Resources": {
        "CognitoUserPoolUsers": {
          "Type": "AWS::Cognito::UserPool",
          "DeletionPolicy": "Retain",
          "Properties": {
            "UserPoolName": "DineUserPool",
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": true,
                "RequireNumbers": true,
                "RequireSymbols": false,
                "RequireUppercase": true
              }
            },
            "UsernameAttributes": [
              "email"
            ]
          }
        },
        "WebUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "Web",
            "GenerateSecret": false,
            "RefreshTokenValidity": 30,
            "UserPoolId": {
              "Ref": "CognitoUserPoolUsers"
            }
          }
        },
        "OrganizationTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "TableName": "dev-organization",
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "CauseTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "organizationId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "organizationId",
                "KeyType": "RANGE"
              }
            ],
            "TableName": "dev-cause",
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/dynamodb/dev/1571272664535-2019-10-17T00:37:44.535Z",
    "artifact": ""
  }
}