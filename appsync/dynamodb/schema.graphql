type Cause {
	id: String!
	causeName: String!
	organizationId: String!
	organizationName: String!
	details: String!
	image: String
	country: String!
}

type Causes {
	causes: [Cause!]
}

type Event {
	id: String!
	eventName: String!
}

type Mutation {
	addEvent(eventName: String!): Event!
	addCharge: StripeCharge!
}

type Organization {
	name: String!
}

type Query {
	getOrganizationInfo(name: String!): Organization!
	getCauseInfo(id: String!, organizationId: String!): Cause
	getAllCauses: Causes!
}

type StripeCharge {
	body: String!
}

schema {
	query: Query
	mutation: Mutation
}